{"ast":null,"code":"var _jsxFileName = \"/Volumes/256GB/REACT/meme-generator/src/components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport memesData from \"../memeData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Meme() {\n  _s();\n\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemeImages, setAllMemeImages] = React.useState(memesData);\n  const [formData, setFormData] = React.useState();\n\n  function handleChange(event) {}\n\n  function getMemeImage() {\n    const memesArray = allMemeImages.data.memes;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    const url = memesArray[randomNumber].url;\n    setMeme(prevMeme => {\n      return { ...prevMeme,\n        randomImage: url\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form--input\",\n        type: \"text\",\n        placeholder: \"Top text\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form--input\",\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"meme--image\",\n        src: meme.randomImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: \"One does not simply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: \"Walk into Mordor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"q2euABDfMPkPJP6XN739SujMA7U=\");\n\n_c = Meme;\nexport default Meme; // const [result, setResult] = React.useState(\"Yes\")\n// function addItem() {\n//     // We'll work on this next\n//     setThingsArray(prevThingsArray => [...prevThingsArray, `Thing ${prevThingsArray.length + 1}`])\n// }\n// function App() {\n//     const [thingsArray, setThingsArray] = React.useState([\"Thing 1\", \"Thing 2\"])\n//     function addItem() {\n//         // We'll work on this next\n//         setThingsArray(prevThingsArray => {\n//             return [...prevThingsArry, `Thing ${prevThingsArray.length + 1}`]\n//         })\n//     } \n//     const thingsElements = thingsArray.map(thing => <p key={thing}>{thing}</p>)\n//     return (\n//         <div>\n//             <button onClick={addItem}>Add Item</button>\n//             {thingsElements}\n//         </div>\n//     )\n// }\n// function toggleFavorite() {\n//     setContact(prevContact => {\n//         return {\n//             ...prevContact,\n//             isFavorite: !prevContact.isFavorite\n//         }\n//     })\n// }\n// test\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","Meme","meme","setMeme","useState","topText","bottomText","randomImage","allMemeImages","setAllMemeImages","formData","setFormData","handleChange","event","getMemeImage","memesArray","data","memes","randomNumber","Math","floor","random","length","url","prevMeme"],"sources":["/Volumes/256GB/REACT/meme-generator/src/components/Meme.js"],"sourcesContent":["import React from \"react\"\nimport memesData from \"../memeData\"\n\nfunction Meme () {\n    \n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\"\n    })\n\n    const [allMemeImages, setAllMemeImages] = React.useState(memesData)\n    const [formData, setFormData] = React.useState()\n\n    function handleChange(event) {\n\n    }\n\n    function getMemeImage() {\n            const memesArray = allMemeImages.data.memes\n            const randomNumber = Math.floor(Math.random() * memesArray.length)\n            const url =  memesArray[randomNumber].url\n            setMeme(prevMeme => {\n                return {\n                    ...prevMeme,\n                    randomImage: url\n                }\n            })\n                \n    }\n    return (\n        <main>\n            <div className=\"form\">\n                <input \n                    className=\"form--input\" \n                    type=\"text\" \n                    placeholder=\"Top text\"\n                    name=\"topText\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n                <input \n                    className=\"form--input\" \n                    type=\"text\" \n                    placeholder=\"Bottom text\"\n                    name=\"bottomText\"\n                    value={meme.bottomText}\n                    onChange={handleChange}\n                />\n                <button \n                    className=\"form--button\" \n                    onClick={getMemeImage}\n                >\n                    Get a new meme image ðŸ–¼\n                </button>         \n            </div>\n            <div className=\"meme\">\n                <img className=\"meme--image\" src={meme.randomImage}></img>\n                <h2 className=\"meme--text top\">One does not simply</h2>\n                <h2 className=\"meme--text bottom\">Walk into Mordor</h2>\n            </div>\n        </main>\n    )\n}\n\nexport default Meme\n\n\n\n// const [result, setResult] = React.useState(\"Yes\")\n\n// function addItem() {\n//     // We'll work on this next\n//     setThingsArray(prevThingsArray => [...prevThingsArray, `Thing ${prevThingsArray.length + 1}`])\n// }\n\n// function App() {\n//     const [thingsArray, setThingsArray] = React.useState([\"Thing 1\", \"Thing 2\"])\n//     function addItem() {\n//         // We'll work on this next\n//         setThingsArray(prevThingsArray => {\n//             return [...prevThingsArry, `Thing ${prevThingsArray.length + 1}`]\n//         })\n//     } \n//     const thingsElements = thingsArray.map(thing => <p key={thing}>{thing}</p>)\n//     return (\n//         <div>\n//             <button onClick={addItem}>Add Item</button>\n//             {thingsElements}\n//         </div>\n//     )\n// }\n\n// function toggleFavorite() {\n//     setContact(prevContact => {\n//         return {\n//             ...prevContact,\n//             isFavorite: !prevContact.isFavorite\n//         }\n//     })\n// }\n\n// test"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,IAAT,GAAiB;EAAA;;EAEb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe;IACnCC,OAAO,EAAE,EAD0B;IAEnCC,UAAU,EAAE,EAFuB;IAGnCC,WAAW,EAAE;EAHsB,CAAf,CAAxB;EAMA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,KAAK,CAACK,QAAN,CAAeJ,SAAf,CAA1C;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BZ,KAAK,CAACK,QAAN,EAAhC;;EAEA,SAASQ,YAAT,CAAsBC,KAAtB,EAA6B,CAE5B;;EAED,SAASC,YAAT,GAAwB;IAChB,MAAMC,UAAU,GAAGP,aAAa,CAACQ,IAAd,CAAmBC,KAAtC;IACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,UAAU,CAACO,MAAtC,CAArB;IACA,MAAMC,GAAG,GAAIR,UAAU,CAACG,YAAD,CAAV,CAAyBK,GAAtC;IACApB,OAAO,CAACqB,QAAQ,IAAI;MAChB,OAAO,EACH,GAAGA,QADA;QAEHjB,WAAW,EAAEgB;MAFV,CAAP;IAIH,CALM,CAAP;EAOP;;EACD,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QACI,SAAS,EAAC,aADd;QAEI,IAAI,EAAC,MAFT;QAGI,WAAW,EAAC,UAHhB;QAII,IAAI,EAAC,SAJT;QAKI,KAAK,EAAErB,IAAI,CAACG,OALhB;QAMI,QAAQ,EAAEO;MANd;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QACI,SAAS,EAAC,aADd;QAEI,IAAI,EAAC,MAFT;QAGI,WAAW,EAAC,aAHhB;QAII,IAAI,EAAC,YAJT;QAKI,KAAK,EAAEV,IAAI,CAACI,UALhB;QAMI,QAAQ,EAAEM;MANd;QAAA;QAAA;QAAA;MAAA,QATJ,eAiBI;QACI,SAAS,EAAC,cADd;QAEI,OAAO,EAAEE,YAFb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAyBI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QAAK,SAAS,EAAC,aAAf;QAA6B,GAAG,EAAEZ,IAAI,CAACK;MAAvC;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAI,SAAS,EAAC,gBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAI,SAAS,EAAC,mBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiCH;;GA5DQN,I;;KAAAA,I;AA8DT,eAAeA,IAAf,C,CAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}